services:
  redpanda-1:
    image: docker.redpanda.com/vectorized/redpanda:latest
    container_name: redpanda-1
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '1'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda-1:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda-1:28082,OUTSIDE://localhost:8082
      - --rpc-addr
      - 0.0.0.0:33145
      - --advertise-rpc-addr
      - redpanda-1:33145
    ports:
      - 8082:8082
      - 9092:9092
      - 28082:28082
      - 29092:29092
    networks:
      - flink-network 

  redpanda-2:
    image: docker.redpanda.com/vectorized/redpanda:latest
    container_name: redpanda-2
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '2'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29093,OUTSIDE://0.0.0.0:9093
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda-2:29093,OUTSIDE://localhost:9093
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28083,OUTSIDE://0.0.0.0:8083
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda-2:28083,OUTSIDE://localhost:8083
      - --rpc-addr
      - 0.0.0.0:33146
      - --advertise-rpc-addr
      - redpanda-2:33146
    ports:
      - 8083:8083
      - 9093:9093
    networks:
      - flink-network 

  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:latest
    container_name: redpanda-console
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/alpaca_config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/alpaca_config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-1:29092", "redpanda-2:29093"]
          schemaRegistry:
            enabled: false
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-1:9644", "http://redpanda-2:9644"]
        connect:
          enabled: false
    ports:
      - 8080:8080
    depends_on:
      - redpanda-1
      - redpanda-2
    networks:
      - flink-network 

  jobmanager:
    image: flink:latest
    ports:
      - "8081:8081"  # Ensure port 8081 dockeris mapped correctly for UI access
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        rest.address: 0.0.0.0  # Ensure that Flink REST API is accessible from outside the container
    networks:
      - flink-network  # Optional: Define a network to ensure proper communication

  taskmanager:
    image: flink:latest
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
    networks:
      - flink-network  # Ensure the task manager can communicate with job manager

  sql-client:
    image: flink:latest
    container_name: sql-client
    build:
      context: .
      dockerfile: Dockerfile-sql
    command:
      - -c
      - |
        /opt/flink/bin/sql-client.sh embedded -l /opt/sql-client/lib; tail -f /dev/null
    depends_on:
      - jobmanager
    environment:
      - FLINK_JOBMANAGER_HOST=jobmanager
      - FLINK_PROPERTIES=jobmanager.rpc.address=jobmanager,rest.address=jobmanager
    networks:
      - flink-network

networks:
  flink-network:
    driver: bridge